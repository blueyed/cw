                                  cw
                                  --

              (c) 2004-2010 v9/fakehalo <v9@fakehalo.us>
                (c) 2013 Reuben Thomas <rrt@sc3d.org>


cw is a colorer for command-line programs.  It is designed to simulate
the environment of the commands being executed, so that when you type
'du', 'df', 'ping', etc. in your shell the output is automatically
colored according to a definition file.  Text patterns are assigned to
lexical classes, which themselves are given colors.  The arguments to
the original program and OS under which it is running can also be
taken into account.  cw includes over 70 definition files, and it's
easy to write more.


Installation
------------

First build the program with

  ./configure && make && make install

or, to install it in your home directory, for example, change the first
part of the command to

  ./configure --prefix=$HOME/.local

cw works by prepending the cw definition directory to the PATH
environment variable.  You should do this in your shell's interactive
startup file (you don't want cw being run by background commands).
For example, for bash and other Bourne-compatible shells, add the
following line to your ~/.bashrc:

  if [ -n "$PS1" ]; then PATH=/usr/local/libexec/cw:$PATH; export PATH; fi

The test of $PS1 ensures that the shell is really interactive.


Use
---

Start a new shell and try some commands, which should now be colored!

cw is set up for a black background by default.  Set CW_INVERT=1 in
your environment to invert cw's colors: this will swap black with
white and the lighter colors with the darker.

Set NOCOLOR=1 in the environment to turn cw off.


Creating your own color definition files
----------------------------------------

Read cw(1) (the cw man page) for a description of coloring definition
files.  Try starting by modifying an existing file; you can find the
directory they are in by asking your shell where it finds a color
wrapper, e.g.:

  which ps

Open or create the desired definition file in that directory, and edit
it as desired.  If you create a new definition, remember to make the
file executable:

  chmod +x /path/to/foo
