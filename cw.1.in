.\" color wrapper manual page.
.de URL
\\$2 \(laURL: \\$1 \(ra\\$3
..
.if \n[.g] .mso www.tmac
.TH "CW" "1" "February 2013" "v9/fakehalo" "Text Manipulation"
.SH "NAME"
cw \- colorer for command-line programs
.SH "SYNOPSIS"
.B cw
[\fI\-\-version|\-\-help\fR]
.SH "DESCRIPTION"
.PP
\fBcw\fR colors the output of command-line programs.  The colors to use are defined by a definition script.  These definition files have the same name as the program they are executing, and are stored in \fB@pkglibexecdir@/\fR.
.SH "DEFINITION SCRIPTS"
Definition scripts are written in the Lua scripting language (see lua(1)). There is no need to know Lua to write a simple definition file. As well as the usual Lua libraries, the \fBposix\fR library is recommended for tasks such as checking the system type and setting environment variables. cw provides the following extra features:
.TP
\fBmatch(\fIclass\fR, \fIpattern\fB)\fR
This function adds a rule for that  matching \fBpattern\fR should be colored as class \fBclass\fR.  Matches are applied in order of definition.  See below for an explanation of classes, and
.URL "http://www.lua.org/manual/5.1/manual.html#5.4.1" "the Lua manual" " for the syntax of patterns."
.TP
\fBarg\fR
As for a standalone Lua script, the \fBarg\fR table gives a list of command-line arguments to the program being wrapped. For convenience, each argument is also a key in the table, so it is easy to test whether a certain argument has been given, in any position, with code such as \fBif arg["\-\-help"] then...\fR
.TP
\fBcommand\fR
If this global variable is set to a string by the definition script, it is used as the command to run.
.SH COLORS
.PP
The default list of classes is: \fBbase, bright, highlight, lowlight, neutral, warning, error, punctuation\fR.  The mapping of classes to colors can be changed by the \fBCW_COLORS\fR environment variable (see below).
.PP
The available colors are:
\fBblack, red, green, yellow, blue, magenta, cyan, white\fR. A color may be prefixed \fBbright\fR to denote a brighter color, e.g. \fBbright red\fR (note the space).
.SH "ENVIRONMENT VARIABLES"
.TP
\fBNOCOLOR\fR
Disables color wrapping when set to any value. Note that cw does not color unless it is connected to a terminal (it detects this separately for standard output and standard error).
.TP
\fBCW_INVERT\fR
Redefines the internal colormap to the opposite colors.  This is intended to help terminals with white backgrounds become more readable (any value placed in the variable will enable)
.TP
\fBCW_COLORS\fR
Defines a mapping from classes to colors.  The format is \fBCW_COLORS=class=color\fR[\fB:class=color...\fR].
.SH "AUTHOR"
Written by v9/fakehalo <v9@fakehalo.us> and Reuben Thomas <rrt@sc3d.org>
.SH "BUGS"
Report bugs to <v9@fakehalo.us>.
.SH "COPYRIGHT"
Copyright \(co 2004 v9/fakehalo.
.br
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
